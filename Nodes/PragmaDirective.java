package Nodes;
import java.io.*; 
import java.util.*;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class PragmaDirective {
                /*
                     Add member variables for this class as per your needs 
                */

                /*
	                 processsing pragmaDirective Node
	                 jsonObject --> contains information of this Node 
	                 valueMap --> maps the childs of this node if exists with the code  generated by them
                */
					public static String pragmaDirective(JSONObject jsonObject,HashMap<JSONObject, String> valueMap)
					{
						StringBuilder sb = new StringBuilder();
						sb.append("pragma ");
						JSONObject j = (JSONObject)jsonObject.get("attributes");
						JSONArray jsonArray = (JSONArray) j.get("literals");
						for(int i=0;i<jsonArray.size();i++)
						{
							sb.append(jsonArray.get(i).toString());
							if(i==0)
								sb.append(" ");
						}
						sb.append(";\n");
						return sb.toString(); 
					}


}