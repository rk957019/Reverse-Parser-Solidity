package Nodes;
import java.io.*; 
import java.util.*;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class ContractDefinition {
                /*
                     Add member variables for this class as per your needs 
                */

                /*
	                 processsing contractDefinition Node
	                 jsonObject --> contains information of this Node 
	                 valueMap --> maps the childs of this node if it exists with the code  generated by them
                */
					public static String contractDefinition(JSONObject jsonObject,HashMap<JSONObject, String> valueMap)
					{
                        StringBuilder sb = new StringBuilder();
						sb.append("\n");
						JSONObject j = (JSONObject)jsonObject.get("attributes");
						sb.append(j.get("contractKind").toString()+" ");
						sb.append(j.get("name").toString()+" {\n");
						JSONArray jsonArray =  (JSONArray)jsonObject.get("children");
						if(jsonArray != null)
						{
							for(int i = 0; i < jsonArray.size(); i++)
							{
								JSONObject j1 = (JSONObject)jsonArray.get(i);
								sb.append(valueMap.get(j1));
								if(!j1.get("name").equals("FunctionDefinition"))sb.append(";");
								sb.append("\n");
							}
						}
						sb.append("}");
						return sb.toString();
					}

}